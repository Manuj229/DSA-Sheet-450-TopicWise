#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node *next;
    Node *prev;
    Node(int d)
    {
        data = d;
        next = prev = NULL;
    }
};
void printlist(Node *head)
{
    while(head!=NULL)
    {
        cout<<(head->data)<<" ";
        head = head->next;
    }
    cout<<endl;
}

Node* insertbegin(Node *head, int data)
{
    Node *temp = new Node(data);
    temp->next = head;
    if(head!=NULL) head->prev = temp;
    return temp;
}

Node* insertend(Node *head, int data)
{
    Node *temp = new Node(data);
    Node *curr = head;
    if(head == NULL) return temp;
    while(curr->next!=NULL)
    {
        curr = curr->next;
    }
    curr->next = temp;
    temp->prev = curr;
    return head;
}
Node* reverseDLL(Node *head)
{
    Node *temp = NULL;
    Node *curr = head;
    while(curr!=NULL)
    {
        temp = curr->prev;
        curr->prev = curr->next;
        curr->next = temp;
        curr = curr->prev;
    }
    head = temp->prev;
    return head;
}

Node *deletehead(Node *head)
{
    if(head == NULL)
        return NULL;
    if(head->next==NULL)
    {
        delete head;
        return NULL;
    }
    else
    {
        Node *temp = head;
        head = head->next;
        head->prev = NULL;
        delete temp;
        return head;
    }
}
Node *deleteend(Node* head)
{
    if(head == NULL)
        return NULL;
    if(head->next==NULL)
    {
        delete head;
        return NULL;
    }
    else
    {
        Node *curr =head;
        while(curr->next!=NULL)
            curr = curr->next;
        curr->prev->next = NULL;
        delete curr;
        return head;
    }
}
int main()
{
	Node *head=new Node(10);
	Node *temp1=new Node(20);
	Node *temp2=new Node(30);
	head->next=temp1;
	temp1->prev=head;
	temp1->next=temp2;
	temp2->prev=temp1;
	printlist(head);
    Node* head3 = deleteend(head);
	printlist(head3);
	return 0;
}
